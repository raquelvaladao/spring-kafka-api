services:
  database:
    image: postgres
    container_name: postgress
    networks:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_PASSWORD}
      POSTGRES_PASSWORD: ${POSTGRES_USERNAME}
      POSTGRES_DB: clashDb
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5432:5432"
    restart: unless-stopped

  databasesonar:
    image: postgres
    container_name: postgressonar
    networks:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "5433:5433"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmins
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
    volumes:
      - pgadmin:/var/lib/pgadmin

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    networks:
      - broker-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  sonarqube:
    container_name: sonarqube
    image: sonarqube:community
    depends_on:
      - databasesonar
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://databasesonar:5433/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9001:9001"

networks:
  postgres:
    driver: bridge
  broker-kafka:
    driver: bridge
volumes:
  postgres:
  pgadmin:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data: